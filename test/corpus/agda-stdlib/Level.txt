==================
module
==================

module Level where

-- Levels.

open import Agda.Primitive public
  using    (Level; _⊔_)
  renaming (lzero to zero; lsuc to suc)

-- Lifting.

record Lift {a ℓ} (A : Set a) : Set (a ⊔ ℓ) where
  constructor lift
  field lower : A


open Lift public

---

(source_file
    (module (module_name (qid)))
    (comment)
    (open (import (module_name (qid)))
        (import_directive)
        (import_directive (id) (id))
        (import_directive
            (renaming (id) (id))
            (renaming (id) (id))))
    (comment)
    (record (record_name (qid))
        (untyped_binding
            (atom (qid))
            (atom (qid)))
        (typed_binding
            (atom (qid))
            (expr
                (atom (SetN (atom (qid))))))
        (expr
            (atom (SetN
                (atom
                  (expr
                    (atom (qid))
                    (atom (qid))
                    (atom (qid)))))))
        (record_declarations_block
            (record_constructor (id))
            (fields
                (signature (field_name) (expr (atom (qid)))))))
    (open (module_name (qid))
        (import_directive)))
